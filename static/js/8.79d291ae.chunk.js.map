{"version":3,"sources":["utils/validateCard.tsx","utils/formatCardNumber.tsx","components/paymentForm.tsx"],"names":["validateCard","sixteenDigitString","value","numSum","i","Math","floor","formatCardNumber","val","String","matches","replace","match","parts","len","length","push","substring","join","PaymentForm","paymentDetail","useState","name","cardNumber","cvv","expYear","expMonth","form","setForm","onSubmit","e","preventDefault","className","htmlFor","type","onChange","target","id","placeholder","autoComplete","test","split","amount","currency"],"mappings":"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","file":"static/js/8.79d291ae.chunk.js","sourcesContent":["/* eslint-disable no-plusplus */\r\n/* eslint-disable no-mixed-operators */\r\n/* eslint-disable eqeqeq */\r\nconst validateCard = (sixteenDigitString: any) => {\r\n  let numSum = 0;\r\n  let value;\r\n  for (let i = 0; i < 16; ++i) {\r\n    if (i % 2 == 0) {\r\n      value = 2 * sixteenDigitString[i];\r\n      if (value >= 10) {\r\n        value = (Math.floor(value / 10) + value % 10);\r\n      }\r\n    } else {\r\n      value = +sixteenDigitString[i];\r\n    }\r\n    numSum += value;\r\n  }\r\n  return (numSum % 10 == 0);\r\n};\r\n\r\nexport default validateCard;\r\n","/* eslint-disable no-mixed-operators */\r\nconst formatCardNumber = (val: any) => {\r\n  const value = String(val);\r\n  const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\r\n  const matches = v.match(/\\d{4,16}/g);\r\n  const match = matches && matches[0] || '';\r\n  const parts = [];\r\n\r\n  for (let i = 0, len = match.length; i < len; i += 4) {\r\n    parts.push(match.substring(i, i + 4));\r\n  }\r\n\r\n  if (parts.length) {\r\n    return parts.join(' ');\r\n  }\r\n  return value;\r\n};\r\n\r\nexport default formatCardNumber;\r\n","import { useState } from 'react';\r\nimport validateCard from '../utils/validateCard';\r\nimport formatCardNumber from '../utils/formatCardNumber';\r\n\r\nconst PaymentForm = ({ paymentDetail }: { paymentDetail: any }) => {\r\n  const [form, setForm] = useState({\r\n    name: '', cardNumber: '', cvv: '', expYear: '', expMonth: '',\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      className=\"col-span-12 lg:col-span-7 flex flex-col bg-white dark:bg-themeBlack shadow-lg px-8 xl:px-16 py-10 text-themeBlack dark:text-white rounded\"\r\n    >\r\n      <p className=\"text-lg md:text-xl text-gray-800 dark:text-white font-bold tracking-tight mb-6\">Fill the Payment Form</p>\r\n      <div className=\"flex flex-col\">\r\n        <label htmlFor=\"name\" className=\"text-black dark:text-white\">\r\n          <h5 className=\"font-bold text-sm md:text-base\">Cardholder Name:</h5>\r\n          <input type=\"name\" name=\"name\" value={form.name} onChange={(e) => setForm({ ...form, name: e.target.value })} id=\"name\" placeholder=\"Full Name\" className=\"w-full mt-2 py-3 px-3 rounded-lg bg-white dark:bg-themeBlack border-2 border-black dark:border-white text-black dark:text-white text-sm focus:border-themeYellow focus:outline-none\" autoComplete=\"off\" />\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col mt-5\">\r\n        <label htmlFor=\"card number\" className=\"text-black dark:text-white\">\r\n          <h5 className=\"font-bold text-sm md:text-base\">Card Number:</h5>\r\n          <input\r\n            type=\"text\"\r\n            name=\"card number\"\r\n            value={form.cardNumber}\r\n            onChange={(e) => {\r\n              if (e.target.value === '') setForm({ ...form, cardNumber: '' });\r\n              if (!/^[0-9\\b]+$/.test(String(e.target.value).split(' ').join(''))) return;\r\n              if (String(e.target.value).split(' ').join('').split('').length > 16) return;\r\n              setForm({ ...form, cardNumber: formatCardNumber(e.target.value) });\r\n            }}\r\n            id=\"card number\"\r\n            placeholder=\"0000 0000 0000 0000\"\r\n            className=\"w-full mt-2 py-3 px-3 rounded-lg g-white dark:bg-themeBlack border-2 border-black dark:border-white text-black dark:text-white text-sm focus:border-themeYellow focus:outline-none\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {String(form.cardNumber).split(' ').join('').split('').length === 16 && !validateCard(String(form.cardNumber).split(' ').join('')) && <p className=\"text-xs text-themeYellow pt-1\">Please check that the Card number is correct</p>}\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"mb-2 -mx-2 flex items-end\">\r\n        <div className=\"px-2 w-1/2\">\r\n          <label htmlFor=\"expiration month\" className=\"font-bold text-sm mb-2 ml-1\">\r\n            <h5 className=\"font-bold text-sm md:text-base\">Exp Date:</h5>\r\n            <select name=\"expiration month\" value={form.expMonth} onChange={(e) => setForm({ ...form, expMonth: e.target.value })} className=\"w-full mt-2 py-3 px-3 rounded-lg bg-white dark:bg-themeBlack border-2 border-black dark:border-white text-black dark:text-white text-sm focus:border-themeYellow focus:outline-none\">\r\n              <option value=\"01\" className=\"text-xs text-black dark:text-white\">January</option>\r\n              <option value=\"02\" className=\"text-xs text-black dark:text-white\">February</option>\r\n              <option value=\"03\" className=\"text-xs text-black dark:text-white\">March</option>\r\n              <option value=\"04\" className=\"text-xs text-black dark:text-white\">April</option>\r\n              <option value=\"05\" className=\"text-xs text-black dark:text-white\">May</option>\r\n              <option value=\"06\" className=\"text-xs text-black dark:text-white\">June</option>\r\n              <option value=\"07\" className=\"text-xs text-black dark:text-white\">July</option>\r\n              <option value=\"08\" className=\"text-xs text-black dark:text-white\">August</option>\r\n              <option value=\"09\" className=\"text-xs text-black dark:text-white\">September</option>\r\n              <option value=\"10\" className=\"text-xs text-black dark:text-white\">October</option>\r\n              <option value=\"11\" className=\"text-xs text-black dark:text-white\">November</option>\r\n              <option value=\"12\" className=\"text-xs text-black dark:text-white\">December</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n        <div className=\"px-2 w-1/2\">\r\n          <label htmlFor=\"expiration month\" className=\"font-bold text-sm mb-2 ml-1\">\r\n            <select value={form.expYear} onChange={(e) => setForm({ ...form, expYear: e.target.value })} className=\"w-full mt-2 py-3 px-3 rounded-lg bg-white dark:bg-themeBlack border-2 border-black dark:border-white text-black dark:text-white text-sm focus:border-themeYellow focus:outline-none\">\r\n              <option value=\"2020\" className=\"text-xs text-black dark:text-white\">2020</option>\r\n              <option value=\"2021\" className=\"text-xs text-black dark:text-white\">2021</option>\r\n              <option value=\"2022\" className=\"text-xs text-black dark:text-white\">2022</option>\r\n              <option value=\"2023\" className=\"text-xs text-black dark:text-white\">2023</option>\r\n              <option value=\"2024\" className=\"text-xs text-black dark:text-white\">2024</option>\r\n              <option value=\"2025\" className=\"text-xs text-black dark:text-white\">2025</option>\r\n              <option value=\"2026\" className=\"text-xs text-black dark:text-white\">2026</option>\r\n              <option value=\"2027\" className=\"text-xs text-black dark:text-white\">2027</option>\r\n              <option value=\"2028\" className=\"text-xs text-black dark:text-white\">2028</option>\r\n              <option value=\"2029\" className=\"text-xs text-black dark:text-white\">2029</option>\r\n              <option value=\"2029\" className=\"text-xs text-black dark:text-white\">2030</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-3 -mx-2 flex items-end\">\r\n        <div className=\"px-2 w-1/2\">\r\n          <label htmlFor=\"cvv\" className=\"font-bold text-sm mb-2 ml-1\">\r\n            <h5 className=\"font-bold text-sm md:text-base\">CVV:</h5>\r\n            <input\r\n              type=\"number\"\r\n              name=\"cvv\"\r\n              id=\"cvv\"\r\n              value={form.cvv}\r\n              onChange={(e) => {\r\n                if (String(e.target.value).split('').length > 3) return;\r\n                setForm({ ...form, cvv: e.target.value });\r\n              }}\r\n              placeholder=\"000\"\r\n              className=\"w-full mt-2 py-3 px-3 rounded-lg g-white dark:bg-themeBlack border-2 border-black dark:border-white text-black dark:text-white text-sm focus:border-themeYellow focus:outline-none\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"w-full flex justify-center items-center bg-themeYellow transform hover:scale-105 text-black font-bold py-4 px-6 rounded-lg mt-5\">\r\n        <i className=\"fas fa-lock fa-lg\" />\r\n        <span className=\"ml-2\">{`Pay ${paymentDetail.amount} ${paymentDetail.currency}`}</span>\r\n      </button>\r\n    </form>\r\n\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"sourceRoot":""}