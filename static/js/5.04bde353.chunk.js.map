{"version":3,"sources":["context/AppReducer.tsx","context/GlobalState.tsx","utils/useLocalStorage.tsx","Layout.tsx","utils/useUpdateLogger.tsx"],"names":["state","action","type","data","payload","error","initialState","removeError","addError","err","console","log","addData","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","useLocalStorage","key","initialValue","useState","localStorage","getItem","JSON","parse","Function","getSavedValue","setValue","useEffect","setItem","stringify","Home","lazy","Error","NotFound","Layout","Loader","darkMode","setDarkMode","metaColor","document","querySelector","setAttribute","variable","callback","info","useUpdateLogger","className","fallback","exact","path","toggleDarkMode","component"],"mappings":"iNAAe,WAACA,EAAYC,GAC1B,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BACFF,GADL,IAEEG,KAAMF,EAAOG,UAEjB,IAAK,eACH,OAAO,2BACFJ,GADL,IAEEK,MAAO,OAEX,IAAK,YACH,OAAO,2BACFL,GADL,IAEEK,MAAOJ,EAAOG,UAElB,QACE,OAAOJ,ICZPM,EAAe,CACnBH,KAAM,GACNE,MAAO,GACPE,YAAa,aACbC,SAAU,SAACC,GAAD,OAAiBC,QAAQC,IAAIF,IACvCG,QAAS,SAACR,GAAD,OAAmBM,QAAQC,IAAIP,KAG7BS,EAAgBC,wBAAcR,GAC9BS,EAAiB,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,SAA0D,EAC/DC,qBAAWC,EAAYZ,GADwC,mBAClFN,EADkF,KAC3EmB,EAD2E,KAuBzF,OACE,cAACN,EAAcO,SAAf,CACEC,MAAO,CACLlB,KAAMH,EAAMG,KACZE,MAAOL,EAAMK,MACbE,YAlBc,WAClBY,EAAS,CACPjB,KAAM,kBAiBJM,SA1BW,SAACC,GAChBU,EAAS,CACPjB,KAAM,YACNE,QAASK,KAwBPG,QAdU,SAACR,GACfe,EAAS,CACPjB,KAAM,WACNE,cAKF,SASGY,M,yFCrCQ,SAASM,EAAgBC,EAAaC,GAAqB,IAAD,EAC7CC,oBAAS,kBAVf,SAACF,EAAcC,GAGnC,OAFmBE,aAAaC,QAAQJ,GAAOK,KAAKC,MAAMH,aAAaC,QAAQJ,IAAQ,IAAM,QAGzFC,aAAwBM,SAAiBN,IAEtCA,GAIkCO,CAAcR,EAAKC,MADW,mBAChEH,EADgE,KACzDW,EADyD,KAKvE,OAFAC,qBAAU,kBAAMP,aAAaQ,QAAQX,EAAKK,KAAKO,UAAUd,MAAS,CAACA,EAAOE,IAElE,CAACF,EAAOW,GCRlB,IAAMI,EAAOC,gBAAK,kBAAM,sDAClBC,EAAQD,gBAAK,kBAAM,iCACnBE,EAAWF,gBAAK,kBAAM,iCAsCbG,UApCA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAA8B,EACdnB,EAAgB,YAAY,GADd,mBACvCoB,EADuC,KAC7BC,EAD6B,KAY9C,OAVAV,qBAAU,WACR,IAAMW,EAAYC,SAASC,cAAc,4BACrCJ,GAAYE,EACdA,EAAUG,aAAa,UAAW,YACxBL,GAAYE,GACtBA,EAAUG,aAAa,UAAW,aAEnC,CAACL,IClBS,SAAyBM,GAA0C,IAA1BC,EAAyB,uDAAdvC,QAAQwC,KACzEjB,qBAAU,kBAAMgB,EAASD,KAAW,CAACA,EAAUC,IDkB/CE,CAAgB,aAAD,cAAqBT,EAArB,YAAiCA,IAG9C,cAAC,IAAD,UACE,cAAC,IAAD,UACE,qBAAKU,UAAS,wFAAmFV,EAAW,uBAAyB,YAArI,SACE,cAAC,WAAD,CAAUW,SAAU,cAACZ,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,eAAlB,SACE,cAACnB,EAAD,CAAMoB,eAAgB,kBAAMb,GAAaD,QAE3C,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,SACE,cAACnB,EAAD,CAAMoB,eAAgB,kBAAMb,GAAaD,QAE3C,cAAC,IAAD,CAAOa,KAAK,SAAZ,SACE,cAACjB,EAAD,MAEF,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,IAAIE,UAAWlB","file":"static/js/5.04bde353.chunk.js","sourcesContent":["export default (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case 'ADD_DATA':\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n    case 'REMOVE_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case 'ADD_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* eslint-disable no-console */\r\nimport {\r\n  createContext, useReducer, ReactChildren, ReactChild,\r\n} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst initialState = {\r\n  data: [],\r\n  error: '',\r\n  removeError: () => {},\r\n  addError: (err: string) => console.log(err),\r\n  addData: (payload : any) => console.log(payload),\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\nexport const GlobalProvider = ({ children }: { children : ReactChild | ReactChildren }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const addError = (err: string) => {\r\n    dispatch({\r\n      type: 'ADD_ERROR',\r\n      payload: err,\r\n    });\r\n  };\r\n\r\n  const removeError = () => {\r\n    dispatch({\r\n      type: 'REMOVE_ERROR',\r\n    });\r\n  };\r\n\r\n  const addData = (payload : any) => {\r\n    dispatch({\r\n      type: 'ADD_DATA',\r\n      payload,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        data: state.data,\r\n        error: state.error,\r\n        removeError,\r\n        addError,\r\n        addData,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst getSavedValue = (key : string, initialValue: any) => {\r\n  const savedValue = localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key) || '') : null;\r\n\r\n  if (savedValue) return savedValue;\r\n  if (initialValue instanceof Function) return initialValue();\r\n\r\n  return initialValue;\r\n};\r\n\r\nexport default function useLocalStorage(key: string, initialValue : any) {\r\n  const [value, setValue] = useState(() => getSavedValue(key, initialValue));\r\n\r\n  useEffect(() => localStorage.setItem(key, JSON.stringify(value)), [value, key]);\r\n\r\n  return ([value, setValue]);\r\n}\r\n","import { Suspense, lazy, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router, Switch, Route,\r\n} from 'react-router-dom';\r\nimport { GlobalProvider } from './context/GlobalState';\r\nimport useLocalStorage from './utils/useLocalStorage';\r\nimport useUpdateLogger from './utils/useUpdateLogger';\r\n\r\nconst Home = lazy(() => import('./containers/Home'));\r\nconst Error = lazy(() => import('./containers/Error'));\r\nconst NotFound = lazy(() => import('./containers/NotFound'));\r\n\r\nconst Layout = ({ Loader }: { Loader: any }) => {\r\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', true);\r\n  useEffect(() => {\r\n    const metaColor = document.querySelector('meta[name=\"theme-color\"]');\r\n    if (darkMode && metaColor) {\r\n      metaColor.setAttribute('content', '#191B25');\r\n    } else if (!darkMode && metaColor) {\r\n      metaColor.setAttribute('content', '#FFFFFF');\r\n    }\r\n  }, [darkMode]);\r\n  useUpdateLogger(`Darkmode- ${typeof darkMode} ${darkMode}`);\r\n\r\n  return (\r\n    <Router>\r\n      <GlobalProvider>\r\n        <div className={`w-full min-h-screen p-0 m-0 transform transition-all duration-700 ease-in-out ${darkMode ? 'scheme-dark bg-black' : 'bg-white'}`}>\r\n          <Suspense fallback={<Loader />}>\r\n            <Switch>\r\n              <Route exact path=\"/paymentwall\">\r\n                <Home toggleDarkMode={() => setDarkMode(!darkMode)} />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <Home toggleDarkMode={() => setDarkMode(!darkMode)} />\r\n              </Route>\r\n              <Route path=\"/error\">\r\n                <Error />\r\n              </Route>\r\n              <Route exact path=\"*\" component={NotFound} />\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n      </GlobalProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/* eslint-disable no-console */\r\nimport { useEffect } from 'react';\r\n\r\nexport default function useUpdateLogger(variable : any, callback = console.info) {\r\n  useEffect(() => callback(variable), [variable, callback]);\r\n  // useEffect(() => callback(`%c ${variable}`, 'background:#000; color:#fff'),[variable,callback]);\r\n}\r\n"],"sourceRoot":""}