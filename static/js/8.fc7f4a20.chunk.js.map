{"version":3,"sources":["utils/validateCardNumber.tsx","utils/validateExpiry.tsx","utils/formatCardNumber.tsx","components/paymentForm.tsx"],"names":["validateCardNumber","sixteenDigitString","value","numSum","i","Math","floor","validateExpiry","expiryDate","today","Date","today_mm","getMonth","today_yy","getFullYear","mm","substring","yy","length","isNaN","Number","formatCardNumber","val","String","matches","replace","match","parts","len","push","join","PaymentForm","paymentDetail","useState","name","cardNumber","cvv","date","form","setForm","validateAllFields","split","onSubmit","e","preventDefault","className","htmlFor","type","onChange","target","id","placeholder","autoComplete","test","disabled","amount","currency"],"mappings":"oJAoBeA,EAjBY,SAACC,GAG1B,IAFA,IACIC,EADAC,EAAS,EAEJC,EAAI,EAAGA,EAAI,KAAMA,EACpBA,EAAI,GAAK,GACXF,EAAQ,EAAID,EAAmBG,KAClB,KACXF,EAASG,KAAKC,MAAMJ,EAAQ,IAAMA,EAAQ,IAG5CA,GAASD,EAAmBG,GAE9BD,GAAUD,EAEZ,OAAQC,EAAS,IAAM,GCGVI,EAjBQ,SAACC,GACtB,IAAMC,EAAQ,IAAIC,KACdC,EAAgBF,EAAMG,WAAa,EACjCC,EAAWJ,EAAMK,cAAgB,IAEnCH,EAAW,KACbA,EAAQ,WAAOA,IAGjB,IAAMI,EAAKP,EAAWQ,UAAU,EAAG,GAC7BC,EAAKT,EAAWQ,UAAU,GAChC,OAAIR,EAAWU,OAAS,GAAqC,MAA/BV,EAAWQ,UAAU,EAAG,IAAeG,MAAMC,OAAOL,KAAQI,MAAMC,OAAOH,KAAQF,EAAK,GAAW,mBAE3HE,EAAKJ,GAAaI,GAAMJ,GAAYE,GAAMJ,EAAkB,UACzD,kBCCMU,EAjBU,SAACC,GAOxB,IANA,IAAMpB,EAAQqB,OAAOD,GAEfE,EADItB,EAAMuB,QAAQ,OAAQ,IAAIA,QAAQ,WAAY,IACtCC,MAAM,aAClBA,EAAQF,GAAWA,EAAQ,IAAM,GACjCG,EAAQ,GAELvB,EAAI,EAAGwB,EAAMF,EAAMR,OAAQd,EAAIwB,EAAKxB,GAAK,EAChDuB,EAAME,KAAKH,EAAMV,UAAUZ,EAAGA,EAAI,IAGpC,OAAIuB,EAAMT,OACDS,EAAMG,KAAK,KAEb5B,GC6FM6B,UAvGK,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,cAA4C,EACzCC,mBAAS,CAC/BC,KAAM,GAAIC,WAAY,GAAIC,IAAK,GAAIC,KAAM,KAFsB,mBAC1DC,EAD0D,KACpDC,EADoD,KAI3DC,EAAoB,WACxB,QAAIF,EAAKJ,KAAKhB,OAAS,GAAyB,IAApBoB,EAAKF,IAAIlB,YACc,KAA/CoB,EAAKH,WAAWM,MAAM,KAAKX,KAAK,IAAIZ,SAAkBlB,EAAmBsC,EAAKH,WAAWM,MAAM,KAAKX,KAAK,QACpF,IAArBQ,EAAKD,KAAKnB,QAA8C,YAA9BX,EAAe+B,EAAKD,SAIpD,OACE,uBACEK,SAAU,SAACC,GACTA,EAAEC,iBACFJ,KAEFK,UAAU,4IALZ,UAOE,mBAAGA,UAAU,iFAAb,mCACA,sBAAKA,UAAU,gBAAf,UACE,wBAAOC,QAAQ,OAAOD,UAAU,6BAAhC,UACE,oBAAIA,UAAU,iCAAd,8BACA,uBAAOE,KAAK,OAAOb,KAAK,OAAOhC,MAAOoC,EAAKJ,KAAMc,SAAU,SAACL,GAAD,OAAOJ,EAAQ,2BAAKD,GAAN,IAAYJ,KAAMS,EAAEM,OAAO/C,UAAUgD,GAAG,OAAOC,YAAY,YAAYN,UAAU,sLAAsLO,aAAa,WAE9Vd,EAAKJ,KAAKhB,OAAS,GAAKoB,EAAKJ,KAAKhB,OAAS,GAAK,mBAAG2B,UAAU,4CAAb,8CAGnD,qBAAKA,UAAU,qBAAf,SACE,wBAAOC,QAAQ,cAAcD,UAAU,6BAAvC,UACE,oBAAIA,UAAU,iCAAd,0BACA,uBACEE,KAAK,OACLb,KAAK,cACLhC,MAAOoC,EAAKH,WACZa,SAAU,SAACL,GACc,KAAnBA,EAAEM,OAAO/C,OAAcqC,EAAQ,2BAAKD,GAAN,IAAYH,WAAY,MACrD,aAAakB,KAAK9B,OAAOoB,EAAEM,OAAO/C,OAAOuC,MAAM,KAAKX,KAAK,OAC1DP,OAAOoB,EAAEM,OAAO/C,OAAOuC,MAAM,KAAKX,KAAK,IAAIW,MAAM,IAAIvB,OAAS,IAClEqB,EAAQ,2BAAKD,GAAN,IAAYH,WAAYd,EAAiBsB,EAAEM,OAAO/C,YAE3DgD,GAAG,cACHC,YAAY,sBACZN,UAAU,qLACVO,aAAa,QAEd7B,OAAOe,EAAKH,YAAYM,MAAM,KAAKX,KAAK,IAAIW,MAAM,IAAIvB,OAAS,IAAMlB,EAAmBuB,OAAOe,EAAKH,YAAYM,MAAM,KAAKX,KAAK,MAAQ,mBAAGe,UAAU,gCAAb,4CAI7I,sBAAKA,UAAU,qBAAf,UACE,wBAAOC,QAAQ,MAAMD,UAAU,6BAA/B,UACE,oBAAIA,UAAU,iCAAd,0BACA,uBACEE,KAAK,OACLb,KAAK,MACLhC,MAAOoC,EAAKD,KACZW,SAAU,SAACL,GACLpB,OAAOoB,EAAEM,OAAO/C,OAAOuC,MAAM,IAAIvB,OAAS,GAC9CqB,EAAQ,2BAAKD,GAAN,IAAYD,KAAMM,EAAEM,OAAO/C,UAEpCgD,GAAG,MACHC,YAAY,QACZN,UAAU,2LAGZP,EAAKD,KAAKnB,OAAS,GAAmC,mBAA9BX,EAAe+B,EAAKD,OAA+B,mBAAGQ,UAAU,gCAAb,kFAC3EP,EAAKD,KAAKnB,OAAS,GAAmC,qBAA9BX,EAAe+B,EAAKD,OAAiC,mBAAGQ,UAAU,gCAAb,sFAGjF,qBAAKA,UAAU,4BAAf,SACE,qBAAKA,UAAU,aAAf,SACE,wBAAOC,QAAQ,MAAMD,UAAU,8BAA/B,UACE,oBAAIA,UAAU,iCAAd,kBACA,uBACEE,KAAK,OACLb,KAAK,MACLgB,GAAG,MACHhD,MAAOoC,EAAKF,IACZY,SAAU,SAACL,GACc,KAAnBA,EAAEM,OAAO/C,OAAcqC,EAAQ,2BAAKD,GAAN,IAAYF,IAAK,MAC9C,aAAaiB,KAAKV,EAAEM,OAAO/C,SAC5BqB,OAAOoB,EAAEM,OAAO/C,OAAOuC,MAAM,IAAIvB,OAAS,GAC9CqB,EAAQ,2BAAKD,GAAN,IAAYF,IAAKO,EAAEM,OAAO/C,WAEnCiD,YAAY,MACZN,UAAU,qLACVO,aAAa,QAEdd,EAAKF,IAAIlB,OAAS,GAAyB,IAApBoB,EAAKF,IAAIlB,QAAgB,mBAAG2B,UAAU,4CAAb,6CAKvD,yBAAQE,KAAK,SAASO,UAAWd,IAAqBK,UAAU,kLAAhE,UACE,mBAAGA,UAAU,sBACb,sBAAMA,UAAU,OAAhB,uBAA+Bb,EAAcuB,OAA7C,YAAuDvB,EAAcwB","file":"static/js/8.fc7f4a20.chunk.js","sourcesContent":["/* eslint-disable no-plusplus */\r\n/* eslint-disable no-mixed-operators */\r\n/* eslint-disable eqeqeq */\r\nconst validateCardNumber = (sixteenDigitString: any) => {\r\n  let numSum = 0;\r\n  let value;\r\n  for (let i = 0; i < 16; ++i) {\r\n    if (i % 2 == 0) {\r\n      value = 2 * sixteenDigitString[i];\r\n      if (value >= 10) {\r\n        value = (Math.floor(value / 10) + value % 10);\r\n      }\r\n    } else {\r\n      value = +sixteenDigitString[i];\r\n    }\r\n    numSum += value;\r\n  }\r\n  return (numSum % 10 == 0);\r\n};\r\n\r\nexport default validateCardNumber;\r\n","/* eslint-disable no-restricted-globals */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable camelcase */\r\nconst validateExpiry = (expiryDate: any) => {\r\n  const today = new Date();\r\n  let today_mm: any = today.getMonth() + 1;\r\n  const today_yy = today.getFullYear() % 100;\r\n\r\n  if (today_mm < 10) {\r\n    today_mm = `0${today_mm}`;\r\n  }\r\n\r\n  const mm = expiryDate.substring(0, 2);\r\n  const yy = expiryDate.substring(3);\r\n  if (expiryDate.length < 5 || (expiryDate.substring(2, 3) !== '/') || isNaN(Number(mm)) || isNaN(Number(yy)) || mm > 12) return 'incorrect format';\r\n\r\n  if (yy > today_yy || (yy == today_yy && mm >= today_mm)) return 'correct';\r\n  return 'incorrect date';\r\n};\r\n\r\nexport default validateExpiry;\r\n","/* eslint-disable no-mixed-operators */\r\nconst formatCardNumber = (val: any) => {\r\n  const value = String(val);\r\n  const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\r\n  const matches = v.match(/\\d{4,16}/g);\r\n  const match = matches && matches[0] || '';\r\n  const parts = [];\r\n\r\n  for (let i = 0, len = match.length; i < len; i += 4) {\r\n    parts.push(match.substring(i, i + 4));\r\n  }\r\n\r\n  if (parts.length) {\r\n    return parts.join(' ');\r\n  }\r\n  return value;\r\n};\r\n\r\nexport default formatCardNumber;\r\n","import { useState } from 'react';\r\nimport validateCardNumber from '../utils/validateCardNumber';\r\nimport validateExpiry from '../utils/validateExpiry';\r\nimport formatCardNumber from '../utils/formatCardNumber';\r\n\r\nconst PaymentForm = ({ paymentDetail }: { paymentDetail: any }) => {\r\n  const [form, setForm] = useState({\r\n    name: '', cardNumber: '', cvv: '', date: '',\r\n  });\r\n  const validateAllFields = () => {\r\n    if (form.name.length < 3 || form.cvv.length !== 3) return false;\r\n    if (form.cardNumber.split(' ').join('').length !== 16 || !validateCardNumber(form.cardNumber.split(' ').join(''))) return false;\r\n    if (form.date.length !== 5 || validateExpiry(form.date) !== 'correct') return false;\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        validateAllFields();\r\n      }}\r\n      className=\"col-span-12 lg:col-span-7 flex flex-col bg-white dark:bg-themeBlack shadow-lg px-8 xl:px-16 py-10 text-themeBlack dark:text-white rounded\"\r\n    >\r\n      <p className=\"text-lg md:text-xl text-gray-800 dark:text-white font-bold tracking-tight mb-6\">Fill the Payment Form</p>\r\n      <div className=\"flex flex-col\">\r\n        <label htmlFor=\"name\" className=\"text-black dark:text-white\">\r\n          <h5 className=\"font-bold text-sm md:text-base\">Cardholder Name:</h5>\r\n          <input type=\"name\" name=\"name\" value={form.name} onChange={(e) => setForm({ ...form, name: e.target.value })} id=\"name\" placeholder=\"Full Name\" className=\"w-full mt-2 py-3 px-3 rounded-lg bg-white dark:bg-themeBlack border-2 border-black dark:border-white text-black dark:text-white text-sm focus:border-themeYellow focus:outline-none\" autoComplete=\"off\" />\r\n        </label>\r\n        {form.name.length > 0 && form.name.length < 3 && <p className=\"text-xs text-themeYellow pt-1 font-normal\">Enter a valid Cardholder Name</p>}\r\n      </div>\r\n\r\n      <div className=\"flex flex-col mt-5\">\r\n        <label htmlFor=\"card number\" className=\"text-black dark:text-white\">\r\n          <h5 className=\"font-bold text-sm md:text-base\">Card Number:</h5>\r\n          <input\r\n            type=\"text\"\r\n            name=\"card number\"\r\n            value={form.cardNumber}\r\n            onChange={(e) => {\r\n              if (e.target.value === '') setForm({ ...form, cardNumber: '' });\r\n              if (!/^[0-9\\b]+$/.test(String(e.target.value).split(' ').join(''))) return;\r\n              if (String(e.target.value).split(' ').join('').split('').length > 16) return;\r\n              setForm({ ...form, cardNumber: formatCardNumber(e.target.value) });\r\n            }}\r\n            id=\"card number\"\r\n            placeholder=\"0000 0000 0000 0000\"\r\n            className=\"w-full mt-2 py-3 px-3 rounded-lg g-white dark:bg-themeBlack border-2 border-black dark:border-white text-black dark:text-white text-sm focus:border-themeYellow focus:outline-none\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {String(form.cardNumber).split(' ').join('').split('').length > 0 && !validateCardNumber(String(form.cardNumber).split(' ').join('')) && <p className=\"text-xs text-themeYellow pt-1\">Enter a valid Card number</p>}\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col mt-4\">\r\n        <label htmlFor=\"exp\" className=\"text-black dark:text-white\">\r\n          <h5 className=\"font-bold text-sm md:text-base\">Expiry Date:</h5>\r\n          <input\r\n            type=\"text\"\r\n            name=\"exp\"\r\n            value={form.date}\r\n            onChange={(e) => {\r\n              if (String(e.target.value).split('').length > 5) return;\r\n              setForm({ ...form, date: e.target.value });\r\n            }}\r\n            id=\"exp\"\r\n            placeholder=\"mm/yy\"\r\n            className=\"w-full mt-2 py-3 px-3 rounded-lg bg-white dark:bg-themeBlack border-2 border-black dark:border-white text-black dark:text-white text-sm focus:border-themeYellow focus:outline-none\"\r\n          />\r\n        </label>\r\n        {(form.date.length > 0 && validateExpiry(form.date) === 'incorrect date') && <p className=\"text-xs text-themeYellow pt-1\"> Please check that the Card expiry date is correct and not exceeded.</p>}\r\n        {(form.date.length > 0 && validateExpiry(form.date) === 'incorrect format') && <p className=\"text-xs text-themeYellow pt-1\"> Please check that the Card expiry date is in&nbsp; (mm/yy) &nbsp;format.</p>}\r\n      </div>\r\n\r\n      <div className=\"mb-3 -mx-2 flex items-end\">\r\n        <div className=\"px-2 w-1/2\">\r\n          <label htmlFor=\"cvv\" className=\"font-bold text-sm mb-2 ml-1\">\r\n            <h5 className=\"font-bold text-sm md:text-base\">CVV:</h5>\r\n            <input\r\n              type=\"test\"\r\n              name=\"cvv\"\r\n              id=\"cvv\"\r\n              value={form.cvv}\r\n              onChange={(e) => {\r\n                if (e.target.value === '') setForm({ ...form, cvv: '' });\r\n                if (!/^[0-9\\b]+$/.test(e.target.value)) return;\r\n                if (String(e.target.value).split('').length > 3) return;\r\n                setForm({ ...form, cvv: e.target.value });\r\n              }}\r\n              placeholder=\"000\"\r\n              className=\"w-full mt-2 py-3 px-3 rounded-lg g-white dark:bg-themeBlack border-2 border-black dark:border-white text-black dark:text-white text-sm focus:border-themeYellow focus:outline-none\"\r\n              autoComplete=\"off\"\r\n            />\r\n            {form.cvv.length > 0 && form.cvv.length !== 3 && <p className=\"text-xs text-themeYellow pt-1 font-normal\">Enter a valid CVV number</p>}\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" disabled={!validateAllFields()} className=\"w-full flex justify-center items-center bg-themeYellow transform hover:scale-105 text-black font-bold py-4 px-6 rounded-lg mt-5 disabled:opacity-50 disabled:cursor-not-allowed\">\r\n        <i className=\"fas fa-lock fa-lg\" />\r\n        <span className=\"ml-2\">{`Pay ${paymentDetail.amount} ${paymentDetail.currency}`}</span>\r\n      </button>\r\n    </form>\r\n\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"sourceRoot":""}